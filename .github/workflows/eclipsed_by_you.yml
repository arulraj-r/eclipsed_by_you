name: Eclipsed By You

on:
  schedule:
    - cron: "10 2 * * *"   # 07:40 IST
    - cron: "30 6 * * *"   # 12:00 IST
    - cron: "45 10 * * *"  # 16:15 IST
    - cron: "0 14 * * *"   # 19:30 IST
    - cron: "15 18 * * *"  # 23:45 IST
  workflow_dispatch:       # Allows manual trigger

jobs:
  post_ECLIPSED_BY_YOU:
    runs-on: ubuntu-latest
    timeout-minutes: 14     # Ensures job exits before the next one starts

    env:
      IG_ECLIPSED_BY_YOU_TOKEN: ${{ secrets.IG_ECLIPSED_BY_YOU_TOKEN }}
      IG_ECLIPSED_BY_YOU_ID: ${{ secrets.IG_ECLIPSED_BY_YOU_ID }}
      DROPBOX_ECLIPSED_BY_YOU_REFRESH: ${{ secrets.DROPBOX_ECLIPSED_BY_YOU_REFRESH }}
      DROPBOX_ECLIPSED_BY_YOU_APP_KEY: ${{ secrets.DROPBOX_ECLIPSED_BY_YOU_APP_KEY }}
      DROPBOX_ECLIPSED_BY_YOU_APP_SECRET: ${{ secrets.DROPBOX_ECLIPSED_BY_YOU_APP_SECRET }}
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      GITHUB_REPOSITORY: ${{ github.repository }}
      MAX_WAIT_SECONDS: "600"        # Optional: use for retry/wait logic
      PYTHONUNBUFFERED: 1            # Flush output immediately for live logs

    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: üêç Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"     # Recommended stable for 2024+
          cache: 'pip'

      - name: üì¶ Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install dropbox requests python-telegram-bot==13.15 pynacl pytz

      - name: üöÄ Run ECLIPSED_BY_YOU Posting Script
        run: python eclipsed_by_you_post.py
        continue-on-error: true  # Prevents failing the entire workflow even on errors

      - name: ‚úÖ Check for script errors
        if: failure()
        run: |
          echo "‚ö†Ô∏è Script failed or exited with error code. Check logs or Telegram report."
